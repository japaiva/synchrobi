# Generated by Django 5.1.7 on 2025-09-03 11:51

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('nivel', models.CharField(choices=[('admin', 'Administrador'), ('gestor', 'Gestor Financeiro'), ('analista', 'Analista Financeiro'), ('contador', 'Contador'), ('diretor', 'Diretor')], default='analista', max_length=20)),
                ('is_superuser', models.BooleanField(default=False)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('centro_custo', models.CharField(blank=True, help_text='Centro de custo do usuário', max_length=20, null=True)),
                ('unidade_negocio', models.CharField(blank=True, help_text='Unidade de negócio', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'db_table': 'usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('codigo', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('razao_social', models.CharField(max_length=255)),
                ('nome_fantasia', models.CharField(blank=True, max_length=255)),
                ('cnpj', models.CharField(max_length=18, unique=True)),
                ('inscricao_estadual', models.CharField(blank=True, max_length=30)),
                ('endereco', models.TextField(blank=True)),
                ('telefone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('logo', models.ImageField(blank=True, upload_to='logos/')),
                ('ativa', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
                'db_table': 'empresas',
            },
        ),
        migrations.CreateModel(
            name='Fornecedor',
            fields=[
                ('codigo', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('razao_social', models.CharField(max_length=255)),
                ('nome_fantasia', models.CharField(blank=True, max_length=255)),
                ('cnpj_cpf', models.CharField(max_length=18)),
                ('inscricao_estadual', models.CharField(blank=True, max_length=30)),
                ('endereco', models.TextField(blank=True)),
                ('telefone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('banco', models.CharField(blank=True, max_length=100)),
                ('agencia', models.CharField(blank=True, max_length=10)),
                ('conta', models.CharField(blank=True, max_length=20)),
                ('pix', models.CharField(blank=True, max_length=100)),
                ('ativo', models.BooleanField(default=True)),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Fornecedor',
                'verbose_name_plural': 'Fornecedores',
                'db_table': 'fornecedores',
                'ordering': ['razao_social'],
            },
        ),
        migrations.CreateModel(
            name='ContaContabil',
            fields=[
                ('codigo', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=255)),
                ('descricao', models.TextField(blank=True)),
                ('nivel', models.IntegerField()),
                ('tipo_conta', models.CharField(choices=[('receita', 'Receita'), ('custo', 'Custo'), ('despesa', 'Despesa'), ('ativo', 'Ativo'), ('passivo', 'Passivo'), ('patrimonio', 'Patrimônio Líquido')], max_length=50)),
                ('categoria_dre', models.CharField(blank=True, help_text='Ex: Receita Bruta, CMV, Despesas Operacionais', max_length=100)),
                ('subcategoria_dre', models.CharField(blank=True, help_text='Ex: Vendas, Material, Pessoal', max_length=100)),
                ('ativa', models.BooleanField(default=True)),
                ('aceita_lancamento', models.BooleanField(default=True, help_text='Se False, é conta sintética')),
                ('conta_pai', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcontas', to='core.contacontabil')),
            ],
            options={
                'verbose_name': 'Conta Contábil',
                'verbose_name_plural': 'Contas Contábeis',
                'db_table': 'contas_contabeis',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='ParametroSistema',
            fields=[
                ('codigo', models.CharField(help_text='Código único do parâmetro', max_length=50, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('tipo', models.CharField(choices=[('texto', 'Texto'), ('numero', 'Número'), ('decimal', 'Decimal'), ('boolean', 'Verdadeiro/Falso'), ('data', 'Data'), ('json', 'JSON')], default='texto', max_length=20)),
                ('valor', models.TextField(help_text='Valor do parâmetro (será convertido conforme o tipo)', verbose_name='Valor')),
                ('valor_padrao', models.TextField(blank=True, verbose_name='Valor Padrão')),
                ('categoria', models.CharField(default='geral', help_text='Categoria para organização (ex: financeiro, sistema, etc)', max_length=50)),
                ('editavel', models.BooleanField(default=True, help_text='Se False, parâmetro não pode ser editado via interface')),
                ('ativo', models.BooleanField(default=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_alteracao', models.DateTimeField(auto_now=True)),
                ('usuario_alteracao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Parâmetro do Sistema',
                'verbose_name_plural': 'Parâmetros do Sistema',
                'db_table': 'parametros_sistema',
                'ordering': ['categoria', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Unidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_allstrategy', models.CharField(help_text='Código estruturado do All Strategy (ex: 1.2.01.20.01.101)', max_length=50, unique=True, verbose_name='Código All Strategy')),
                ('codigo_interno', models.CharField(blank=True, help_text='Código simplificado para uso interno (ex: 101)', max_length=20, verbose_name='Código Interno')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome da Unidade')),
                ('nivel', models.IntegerField(help_text='Nível na hierarquia (calculado automaticamente)', verbose_name='Nível Hierárquico')),
                ('tipo', models.CharField(choices=[('S', 'Sintético'), ('A', 'Analítico')], help_text='S=Sintético (agrupador), A=Analítico (operacional)', max_length=1, verbose_name='Tipo')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_alteracao', models.DateTimeField(auto_now=True)),
                ('sincronizado_allstrategy', models.BooleanField(default=False, verbose_name='Sincronizado All Strategy')),
                ('data_ultima_sincronizacao', models.DateTimeField(blank=True, null=True, verbose_name='Última Sincronização')),
                ('responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
                ('unidade_pai', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_unidades', to='core.unidade', verbose_name='Unidade Superior')),
            ],
            options={
                'verbose_name': 'Unidade Organizacional',
                'verbose_name_plural': 'Unidades Organizacionais',
                'db_table': 'unidades',
                'ordering': ['codigo_allstrategy'],
            },
        ),
        migrations.CreateModel(
            name='CentroCusto',
            fields=[
                ('codigo', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=255)),
                ('descricao', models.TextField(blank=True)),
                ('tipo', models.CharField(choices=[('operacional', 'Operacional'), ('administrativo', 'Administrativo'), ('comercial', 'Comercial'), ('financeiro', 'Financeiro'), ('ti', 'Tecnologia da Informação'), ('rh', 'Recursos Humanos'), ('projeto', 'Projeto Específico')], default='operacional', max_length=50)),
                ('ativo', models.BooleanField(default=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('orcamento_anual', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('orcamento_mensal', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='centros_custo_responsavel', to=settings.AUTH_USER_MODEL)),
                ('unidade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='centros_custo', to='core.unidade')),
            ],
            options={
                'verbose_name': 'Centro de Custo',
                'verbose_name_plural': 'Centros de Custo',
                'db_table': 'centros_custo',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='UsuarioCentroCusto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('centro_custo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usuarios_com_acesso', to='core.centrocusto')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='centros_custo_permitidos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Permissão Centro de Custo',
                'verbose_name_plural': 'Permissões Centros de Custo',
                'db_table': 'usuario_centros_custo',
            },
        ),
        migrations.AddIndex(
            model_name='unidade',
            index=models.Index(fields=['codigo_allstrategy'], name='unidades_codigo__5b5acd_idx'),
        ),
        migrations.AddIndex(
            model_name='unidade',
            index=models.Index(fields=['codigo_interno'], name='unidades_codigo__951deb_idx'),
        ),
        migrations.AddIndex(
            model_name='unidade',
            index=models.Index(fields=['tipo', 'ativa'], name='unidades_tipo_2644e4_idx'),
        ),
        migrations.AddIndex(
            model_name='unidade',
            index=models.Index(fields=['unidade_pai', 'ativa'], name='unidades_unidade_7ed667_idx'),
        ),
        migrations.AddIndex(
            model_name='unidade',
            index=models.Index(fields=['nivel'], name='unidades_nivel_8d5829_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='usuariocentrocusto',
            unique_together={('usuario', 'centro_custo')},
        ),
    ]
